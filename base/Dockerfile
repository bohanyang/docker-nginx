FROM alpine:3.12

LABEL maintainer="NGINX Docker Maintainers <docker-maint@nginx.com>"

ENV NGINX_VERSION 1.19.6
ENV NJS_VERSION 0.5.0
ENV PKG_RELEASE 1

RUN set -eux; \
# Create nginx user/group first, to be consistent throughout docker variants
    addgroup -g 101 -S nginx; \
    adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx; \
    apk add --no-cache \
# Bring in tzdata so users could set the timezones through the environment variables
        tzdata \
# Bring in curl to make registering on DNS SD easier
        curl \
    ; \
    apkArch="$(cat /etc/apk/arch)"; \
    nginxPackages=" \
        nginx=${NGINX_VERSION}-r${PKG_RELEASE} \
        nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE} \
        nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE} \
        nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE} \
        nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE} \
    "; \
    case "$apkArch" in \
        x86_64) \
# Arches officially built by upstream
            KEY_SHA512="e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin"; \
            apk add --no-cache --virtual .cert-deps openssl; \
            curl -fsSL -D - https://nginx.org/keys/nginx_signing.rsa.pub -o /tmp/nginx_signing.rsa.pub; \
            if [ "$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)" = "$KEY_SHA512" ]; then \
                echo 'Key verification succeeded!'; \
                mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/; \
            else \
                echo 'Key verification failed!'; \
                exit 1; \
            fi; \
            apk del .cert-deps; \
            apk add -X "https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\.[0-9]+' /etc/alpine-release)/main" --no-cache $nginxPackages \
            ;; \
        *) \
# We're on an architecture upstream doesn't officially build for.
# Let's build binaries from the published packaging sources
            tempDir="$(mktemp -d)"; \
            chown nobody:nobody "$tempDir"; \
            apk add --no-cache --virtual .build-deps \
                gcc \
                libc-dev \
                make \
                openssl-dev \
                pcre-dev \
                zlib-dev \
                linux-headers \
                libxslt-dev \
                gd-dev \
                geoip-dev \
                perl-dev \
                libedit-dev \
                mercurial \
                bash \
                alpine-sdk \
                findutils \
            ; \
            su nobody -s /bin/sh -eux -c " \
                export HOME=${tempDir}; \
                cd ${tempDir}; \
                hg clone https://hg.nginx.org/pkg-oss; \
                cd pkg-oss; \
                hg up ${NGINX_VERSION}-${PKG_RELEASE}; \
                cd alpine; \
                make all; \
                apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk; \
                abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz \
            "; \
            cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/; \
            apk del .build-deps; \
            apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages; \
# If we have leftovers from building, let's purge them (including extra, unnecessary build deps)
            rm -r "$tempDir" \
            ;; \
    esac; \
    if [ -n "/etc/apk/keys/abuild-key.rsa.pub" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi; \
    if [ -n "/etc/apk/keys/nginx_signing.rsa.pub" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi; \
# Bring in gettext so we can get `envsubst`, then throw
# the rest away. To do this, we need to install `gettext`
# then move `envsubst` out of the way so `gettext` can
# be deleted completely, then move `envsubst` back.
    apk add --no-cache --virtual .gettext gettext; \
    mv /usr/bin/envsubst /tmp/; \
    \
    runDeps="$( \
        scanelf --needed --nobanner /tmp/envsubst \
            | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
            | sort -u \
            | xargs -r apk info --installed \
            | sort -u \
    )"; \
    apk add --no-cache $runDeps; \
    apk del .gettext; \
    mv /tmp/envsubst /usr/local/bin/

EXPOSE 80

STOPSIGNAL SIGTERM

CMD ["nginx", "-g", "daemon off;"]
